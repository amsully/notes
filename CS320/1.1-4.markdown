
# Chapter 1\_1.1

## Introduction: the problem domain

10,000 Lines of Code = 1-3 Months of Development

Productivity of a student is 5,000 lines per person-month

In 'business' of developing code:

- 1000 Lines of code (100 lines for embedded systems)

**difference**  student system is showing a demo works

### 1.1.1 Industrial Strength Software

**industrial strength software:** is built to solve some problem of a client and is used by the clients organization for operating some part of business
- Potential loss:
	- financial or business loss, inconvenience to user, loss of property/life
- Needs:
	- dependability, reliability, user friendliness

- 30%-50% of project is testing
- requirements
	- backup and recovery, fault tolerance, following of standards, portability

### 1.1.2 Software is Expensive 

- Lines of Code = LOC / Thousands of lines of code = KLOC
- Hardware costs have dropped and software has become the primary factor

### 1.1.3 Late and Unreliable

- 35% reported as 'runaway' - out of control budget and late
- 70% of equipment error is software
- Errors arise from Design and Development resulting in bugs that could last from the beginning.

### 1.1.3 Maintenance and Rework

- After deployment maintenance begin, -- process called **corrective maintenance**

- **law of software evolution**: environment will change over time
- **adaptive maintenance** - correcting environment changes

- cost of maintenance often costs more - 80:20, 70:30, 60:40

- **regression testing** is required to make sure modifications to change functionality incorrectly: executing old test cases to test no new errors have been introduced

- rework and dev due to changes of client consume 30-40% of the effort

































